version: "3.8"
services:
  api:
    build:
      context: ./api
      tags:
        - josefkliment/api:latest
        - ghcr.io/klimejo22/api:latest
    image: josefkliment/api:latest
    container_name: api
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthCheck"]
      interval: 5s
      timeout: 2s
      retries: 5

  frontend:
    build:
      context: ./nginx
      tags:
        - josefkliment/frontend:latest
        - ghcr.io/klimejo22/frontend:latest
    image: josefkliment/frontend:latest
    container_name: frontend
    ports:
      - "80:80"
      - "443:443"
      - "444:444"
    volumes:
      - ./nginx/frontend:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      api:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:443"]
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 5s

  postgres: 
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: currencydata   
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d currencydata -U postgres"]
      interval: 2s
      timeout: 1s
      retries: 5
  # Grafana containery
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - default

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./dashboards:/var/lib/grafana/dashboards
      - ./provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SERVER_ROOT_URL=https://localhost:444/
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Abcdef0
    networks:
      - default
    depends_on:
      - prometheus
      - loki

  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki

  alloy:
    image: grafana/alloy:v1.8.3
    container_name: alloy
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./alloy/alloy-config.alloy:/etc/alloy/config.alloy
    command: ["run", "/etc/alloy/config.alloy"]
    depends_on:
      - loki

volumes:
  pgdata:
  grafana_data:
  prometheus_data:
  loki_data:
